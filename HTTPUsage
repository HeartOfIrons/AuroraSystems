local function RunHTTP(Player,Filer)
	if Player:IsA("Player") then
		if type(Filer) == "string" then
			if Services.HttpService.HttpEnabled then
				local response = Services.HttpService:GetAsync(Shortcuts.Data.System.ExternalData)
				local success, jsonData = pcall(function() return Services.HttpService:JSONDecode(response) end)
				if success then
					if Filer == "VersionFetch" then
						local latestVersion = jsonData.Version
						if Shortcuts.Data.System.LatestVersion == latestVersion then
							ReturnClientData(Player,"Version","UP TO DATE")
						else
							ReturnClientData(Player,"Version","OUTDATED")
						end
					end
					if Filer == "Whitelist" then
						local Whitelist = false
						if jsonData.WhitelistEnabled == true then
							for i,v in ipairs(jsonData.Whitelist) do
								if v == Player.Name then
									Whitelist = true
								end
							end
							if Whitelist == false then
								Player:Kick("Unauthorized to use Aurora.")
							end
						else
							Shortcuts.Util.ErrorCall("POTENTIAL EXPLOIT - Whitelist was fired to decode, but Whitelist is not enabled. Aborted Whitelist Decode.","5","warn")
						end
					end
					if Filer == "Bans" then
						local Banned = false
						for i,v in ipairs(jsonData.Bans) do
							if v == Player.Name then
								Banned = true
							end
						end
						if Banned == true then
							Player:Kick("Permanently banned from using Aurora Systems. You can appeal via our official server.")
						end
						Shortcuts.Util.ErrorCall("Bans Decode fired to decode, assumption was called and passed.","2","warn")
					end
				else
					Shortcuts.Util.ErrorCall("Server Decode experienced an error fetching the JSON External Data.","4","warn")
					ReturnClientData(Player,"Version","UNKNOWN")
				end
			else
				Shortcuts.Util.ErrorCall("HTTP Services are disabled. Please enable them for Aurora to work.","4","warn")
			end
		else
			Shortcuts.Util.ErrorCall("RunHTTP() expected 'String' type, instead got "..Filer:GetFullName() or Filer.Name or Filer,"3","warn")
		end
	else
		Shortcuts.Util.ErrorCall("RunHTTP() expected 'Player' type, instead got "..Player:GetFullname() or Player.Name or Player,"3","warn")
	end
end
